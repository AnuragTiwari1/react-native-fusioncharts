var fcDemos = {};

fcDemos['ex1'] = {
  title: 'A simple chart',
  description: 'A simple chart with all data embedded into the directive',
  code:
    'import React, { Component } from "react";\nimport { Platform, StyleSheet, Text, View } from "react-native";\nimport FusionCharts from "react-native-fusioncharts";\n\nexport default class PlainColumn2D extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: "column2d",\n      width: "100%",\n      height: "100%",\n      dataFormat: "json",\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: "file:///android_asset/fusioncharts.html" },\n      ios: require("./assets/fusioncharts.html")\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>A Column 2D Chart</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: "bold",\n    fontSize: 20,\n    textAlign: "center",\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: "#000",\n    borderWidth: 1\n  }\n});\n'
};

fcDemos['ex2'] = {
  title: 'A 3d pie chart',
  description:
    'A 3D pie chart using the datasource attribute from components scope',
  data: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
  code:
    "import React, { Component } from \"react\";\nimport FusionCharts from 'react-native-fusioncharts';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\n\nclass Pie3D extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'pie3d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      dataSource: {/* see data tab */}\n    this.libraryPath = Platform.select({\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    })\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>A 3D Pie Chart</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 16\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 2\n  }\n});\n\nexport default Pie3D;"
};

fcDemos['ex3'] = {
  title: 'Update chart data',
  description:
    'Change the data dynamically in the component and watch the chart update automatically',
  code:
    "import React, { Component } from 'react';\nimport FusionCharts from 'react-native-fusioncharts';\nimport { View, Text, StyleSheet, Platform, Button, Alert } from 'react-native';\n\nclass UpdateChartData extends Component {\n  constructor(props) {\n    super(props);\n    this.changeData = this.changeData.bind(this);\n    this.state = {\n      type: 'column2d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  changeData() {\n    let dataSource = this.state.dataSource;\n    dataSource.data[2].value = this.getRandomNumber();\n    dataSource.data[3].value = this.getRandomNumber();\n    this.setState({\n      dataSource: dataSource\n    });\n  }\n\n  /*\n  Get a random number from 50 to 300\n  */\n  getRandomNumber() {\n    var max = 300,\n      min = 50;\n    return Math.round((max - min) * Math.random() + min);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Update Chart Data</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n        <View style={styles.buttonContainer}>\n          <Button\n            title=\"Update Chart Data\"\n            onPress={this.changeData.bind(this)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 16\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 2\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    padding: 10,\n    marginTop: 10\n  }\n});\n\nexport default UpdateChartData;\n"
};

fcDemos['ex4'] = {
  title: 'Listen to events from chart',
  description:
    'Bind event listener to the chart and get the related event data',
  code:
    "import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nexport default class ListenEvents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: 'column2d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Listen to events from chart</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            events={this.state.events}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});\n"
};

fcDemos['ex5'] = {
  title: 'Add drill down to chart',
  description: 'Use LinkedCharts to quickly add drill-down to charts',
  code:
    "import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nexport default class DrillDown extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'column2d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>A Chart with Drill-Down</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n            onInitialized={caller => {\n              this.apiCaller = caller;\n              this.apiCaller(`window.chartObj.configureLink({\n                type: 'pie2d',\n                overlayButton: {\n                  message: 'Back',\n                  fontColor: '880000',\n                  bgColor: 'FFEEEE',\n                  borderColor: '660000',\n                }}, 0);`);\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});\n"
};

fcDemos['ex6'] = {
  title: 'A simple gauge',
  description: 'A simple gauge to show customer satisfaction score',
  code:
    "import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nexport default class DrillDown extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'angulargauge',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>A Simple Gauge</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});\n"
};

fcDemos['ex7'] = {
  title: 'Applying a different theme',
  description: 'Choosing from different themes available in FusionCharts Suite',
  code:
    "import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nexport default class ThemeMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.activatedColor = '#8cd46a';\n    this.apiCaller = null;\n\n    this.state = {\n      selectedTheme: 'fusion',\n      btnDisabled: true,\n      type: 'column2d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  changeTheme(theme) {\n    this.setState({\n      selectedTheme: theme\n    })\n    this.apiCaller(`window.chartObj.setChartAttribute('theme', '${theme}')`);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Choose from multiple themes</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath}\n            onInitialized={(caller) => {\n              this.setState({ btnDisabled: false });\n              this.apiCaller = caller;\n            }}\n          />\n        </View>\n\n        <View style={styles.buttonContainer}>\n          <Button title=\"Fusion\" disabled={this.state.btnDisabled} onPress={() => this.changeTheme('fusion')} color={this.state.selectedTheme === 'fusion' ? this.activatedColor : 'blue'} />\n          <Button title=\"Fint\" disabled={this.state.btnDisabled} onPress={() => this.changeTheme('fint')} color={this.state.selectedTheme === 'fint' ? this.activatedColor : 'blue'} />\n          <Button title=\"Ocean\" disabled={this.state.btnDisabled} onPress={() => this.changeTheme('ocean')} color={this.state.selectedTheme === 'ocean' ? this.activatedColor : 'blue'} />\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: 10,\n    marginTop: 10\n  },\n  instruction: {\n    fontSize: 15\n  }\n});"
};

fcDemos['ex8'] = {
  title: 'Change chart type at runtime',
  description: 'Change the chart type dynamically or at runtime',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nexport default class ChartRunTime extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'column2d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  changeType(type) {\n    this.setState({ chartType: type }, () => {\n      this.apiCaller(\`window.chartObj.chartType('\${type}')\`);\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Change chart type at runtime</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n            onInitialized={caller => {\n              this.apiCaller = caller;\n              if (this.state.chartType === '')\n                this.setState({ chartType: this.state.type });\n            }}\n          />\n        </View>\n        <Text style={styles.info}>Press button to change chart type</Text>\n        <View style={styles.buttonContainer}>\n          <Button\n            disabled={\n              this.state.chartType === '' || this.state.chartType == 'column2d'\n            }\n            style={{ margin: 8 }}\n            title="Column2D"\n            onPress={() => this.changeType('column2d')}\n          />\n          <Button\n            disabled={\n              this.state.chartType === '' || this.state.chartType == 'pie2d'\n            }\n            title="Pie2D"\n            onPress={() => this.changeType('pie2d')}\n          />\n          <Button\n            disabled={\n              this.state.chartType === '' || this.state.chartType == 'bar2d'\n            }\n            title="Bar2D"\n            onPress={() => this.changeType('bar2d')}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  },\n  buttonContainer: {\n    padding: 10,\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  info: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 5\n  }\n});`
};

fcDemos['ex9'] = {
  title: 'A Simple TimeSeries Chart',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/line-chart-with-time-axis-data.json\n[\n  [\n    "01-Feb-11",\n    8866\n  ],\n  [\n    "02-Feb-11",\n    2174\n  ],\n  [\n    "03-Feb-11",\n    2084\n  ],\n  [\n    "04-Feb-11",\n    1503\n  ],\n  [\n    "05-Feb-11",\n    4928\n  ],\n  [\n    "06-Feb-11",\n    4667\n  ],\n  [\n    "07-Feb-11",\n    1064\n  ],\n  [\n    "08-Feb-11",\n    851\n  ],\n  [\n    "09-Feb-11",\n    7326\n  ],\n  [\n    "10-Feb-11",\n    8399\n  ],\n  [\n    "11-Feb-11",\n    4084\n  ],\n  [\n    "12-Feb-11",\n    4012\n  ],\n  [\n    "13-Feb-11",\n    1673\n  ],\n  [\n    "14-Feb-11",\n    6018\n  ],\n  [\n    "15-Feb-11",\n    9011\n  ],\n  [\n    "16-Feb-11",\n    5817\n  ],\n  [\n    "17-Feb-11",\n    5813\n  ],\n  [\n    "18-Feb-11",\n    566\n  ],\n  [\n    "19-Feb-11",\n    9065\n  ],\n  [\n    "20-Feb-11",\n    6734\n  ],\n  [\n    "21-Feb-11",\n    6937\n  ],\n  [\n    "22-Feb-11",\n    3038\n  ],\n  [\n    "23-Feb-11",\n    4445\n  ],\n  [\n    "24-Feb-11",\n    8782\n  ],\n  [\n    "25-Feb-11",\n    9489\n  ],\n  [\n    "26-Feb-11",\n    9624\n  ],\n  [\n    "27-Feb-11",\n    9033\n  ],\n  [\n    "28-Feb-11",\n    6932\n  ],\n  [\n    "01-Mar-11",\n    625\n  ],\n  [\n    "02-Mar-11",\n    904\n  ],\n  [\n    "03-Mar-11",\n    7572\n  ],\n  [\n    "04-Mar-11",\n    2124\n  ],\n  [\n    "05-Mar-11",\n    8157\n  ],\n  [\n    "06-Mar-11",\n    8666\n  ],\n  [\n    "07-Mar-11",\n    3186\n  ],\n  [\n    "08-Mar-11",\n    9247\n  ],\n  [\n    "09-Mar-11",\n    8393\n  ],\n  [\n    "10-Mar-11",\n    9191\n  ],\n  [\n    "11-Mar-11",\n    1278\n  ],\n  [\n    "12-Mar-11",\n    7252\n  ],\n  [\n    "13-Mar-11",\n    6516\n  ],\n  [\n    "14-Mar-11",\n    8176\n  ],\n  [\n    "15-Mar-11",\n    5759\n  ],\n  [\n    "16-Mar-11",\n    7601\n  ],\n  [\n    "17-Mar-11",\n    3616\n  ],\n  [\n    "18-Mar-11",\n    9612\n  ],\n  [\n    "19-Mar-11",\n    2631\n  ],\n  [\n    "20-Mar-11",\n    4939\n  ],\n  [\n    "21-Mar-11",\n    3578\n  ],\n  [\n    "22-Mar-11",\n    3742\n  ],\n  [\n    "23-Mar-11",\n    5100\n  ],\n  [\n    "24-Mar-11",\n    6925\n  ],\n  [\n    "25-Mar-11",\n    5239\n  ],\n  [\n    "26-Mar-11",\n    1461\n  ],\n  [\n    "27-Mar-11",\n    2317\n  ],\n  [\n    "28-Mar-11",\n    8238\n  ],\n  [\n    "29-Mar-11",\n    3617\n  ],\n  [\n    "30-Mar-11",\n    8680\n  ],\n  [\n    "31-Mar-11",\n    8487\n  ],\n  [\n    "01-Apr-11",\n    1768\n  ],\n  [\n    "02-Apr-11",\n    1227\n  ],\n  [\n    "03-Apr-11",\n    4137\n  ],\n  [\n    "04-Apr-11",\n    9055\n  ],\n  [\n    "05-Apr-11",\n    4984\n  ],\n  [\n    "06-Apr-11",\n    1577\n  ],\n  [\n    "07-Apr-11",\n    6624\n  ],\n  [\n    "08-Apr-11",\n    5802\n  ],\n  [\n    "09-Apr-11",\n    5190\n  ],\n  [\n    "10-Apr-11",\n    3092\n  ],\n  [\n    "11-Apr-11",\n    7304\n  ],\n  [\n    "12-Apr-11",\n    3445\n  ],\n  [\n    "13-Apr-11",\n    1480\n  ],\n  [\n    "14-Apr-11",\n    3705\n  ],\n  [\n    "15-Apr-11",\n    7795\n  ],\n  [\n    "16-Apr-11",\n    7405\n  ],\n  [\n    "17-Apr-11",\n    3901\n  ],\n  [\n    "18-Apr-11",\n    4428\n  ],\n  [\n    "19-Apr-11",\n    8874\n  ],\n  [\n    "20-Apr-11",\n    3072\n  ],\n  [\n    "21-Apr-11",\n    6340\n  ],\n  [\n    "22-Apr-11",\n    2275\n  ],\n  [\n    "23-Apr-11",\n    8934\n  ],\n  [\n    "24-Apr-11",\n    7595\n  ],\n  [\n    "25-Apr-11",\n    3869\n  ],\n  [\n    "26-Apr-11",\n    7395\n  ],\n  [\n    "27-Apr-11",\n    7812\n  ],\n  [\n    "28-Apr-11",\n    9642\n  ],\n  [\n    "29-Apr-11",\n    6925\n  ],\n  [\n    "30-Apr-11",\n    8537\n  ],\n  [\n    "01-May-11",\n    2985\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%d-%b-%y"\n  },\n  {\n    "name": "Grocery Sales Value",\n    "type": "number"\n  }\n]',
  description:
    'A simple time-series chart with a single series plotted as line',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/line-chart-with-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/line-chart-with-time-axis-schema.json'\n).then(jsonify);\n\nexport default class SimpleTimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n         // Initially data is set as null\n         data: null,\n         caption: {\n           text: "Sales Analysis"\n         },\n         subcaption: {\n           text: "Grocery"\n         },\n         yAxis: [\n           {\n             plot: {\n               value: "Grocery Sales Value",\n               type: "line"\n             },\n             format: {\n               prefix: "$"\n             },\n             title: "Sale Value"\n           }\n         ]\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Simple Time Series</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex10'] = {
  title: 'Adding a reference line',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%-m/%-d/%Y %H:%M:%S"\n  },\n  {\n    "name": "Carbon mono-oxide (mg/m^3)",\n    "type": "number"\n  },\n  {\n    "name": "Non methane hydrocarbons (microg/m^3)",\n    "type": "number"\n  },\n  {\n    "name": "Benzene",\n    "type": "number"\n  },\n  {\n    "name": "Nitrogen dioxide",\n    "type": "number"\n  },\n  {\n    "name": "Temperature",\n    "type": "number"\n  }\n]',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/adding-a-reference-line-data.json\n[\n  [\n    "3/10/2004 18:00:00",\n    2.6,\n    150,\n    11.9,\n    113,\n    13.6\n  ],\n  [\n    "3/10/2004 19:00:00",\n    2,\n    112,\n    9.4,\n    92,\n    13.3\n  ],\n  [\n    "3/10/2004 20:00:00",\n    2.2,\n    88,\n    9,\n    114,\n    11.9\n  ],\n  [\n    "3/10/2004 21:00:00",\n    2.2,\n    80,\n    9.2,\n    122,\n    11\n  ],\n  [\n    "3/10/2004 22:00:00",\n    1.6,\n    51,\n    6.5,\n    116,\n    11.2\n  ],\n  [\n    "3/10/2004 23:00:00",\n    1.2,\n    38,\n    4.7,\n    96,\n    11.2\n  ],\n  [\n    "3/11/2004 0:00:00",\n    1.2,\n    31,\n    3.6,\n    77,\n    11.3\n  ],\n  [\n    "3/11/2004 1:00:00",\n    1,\n    31,\n    3.3,\n    76,\n    10.7\n  ],\n  [\n    "3/11/2004 2:00:00",\n    0.9,\n    24,\n    2.3,\n    60,\n    10.7\n  ],\n  [\n    "3/11/2004 3:00:00",\n    0.6,\n    19,\n    1.7,\n    45,\n    10.3\n  ],\n  [\n    "3/11/2004 4:00:00",\n    2,\n    14,\n    1.3,\n    34,\n    10.1\n  ],\n  [\n    "3/11/2004 5:00:00",\n    0.7,\n    8,\n    1.1,\n    28,\n    11\n  ],\n  [\n    "3/11/2004 6:00:00",\n    0.7,\n    16,\n    1.6,\n    48,\n    10.5\n  ],\n  [\n    "3/11/2004 7:00:00",\n    1.1,\n    29,\n    3.2,\n    82,\n    10.2\n  ],\n  [\n    "3/11/2004 8:00:00",\n    2,\n    64,\n    8,\n    112,\n    10.8\n  ],\n  [\n    "3/11/2004 9:00:00",\n    2.2,\n    87,\n    9.5,\n    101,\n    10.5\n  ],\n  [\n    "3/11/2004 10:00:00",\n    1.7,\n    77,\n    6.3,\n    98,\n    10.8\n  ],\n  [\n    "3/11/2004 11:00:00",\n    1.5,\n    43,\n    5,\n    92,\n    10.5\n  ],\n  [\n    "3/11/2004 12:00:00",\n    1.6,\n    61,\n    5.2,\n    95,\n    9.5\n  ],\n  [\n    "3/11/2004 13:00:00",\n    1.9,\n    63,\n    7.3,\n    112,\n    8.3\n  ],\n  [\n    "3/11/2004 14:00:00",\n    2.9,\n    164,\n    11.5,\n    128,\n    8\n  ],\n  [\n    "3/11/2004 15:00:00",\n    2.2,\n    79,\n    8.8,\n    126,\n    8.3\n  ],\n  [\n    "3/11/2004 16:00:00",\n    2.2,\n    95,\n    8.3,\n    131,\n    9.7\n  ],\n  [\n    "3/11/2004 17:00:00",\n    2.9,\n    150,\n    11.2,\n    135,\n    9.8\n  ],\n  [\n    "3/11/2004 18:00:00",\n    4.8,\n    307,\n    20.8,\n    151,\n    10.3\n  ],\n  [\n    "3/11/2004 19:00:00",\n    6.9,\n    461,\n    27.4,\n    172,\n    9.7\n  ],\n  [\n    "3/11/2004 20:00:00",\n    6.1,\n    401,\n    24,\n    165,\n    9.6\n  ],\n  [\n    "3/11/2004 21:00:00",\n    3.9,\n    197,\n    12.8,\n    136,\n    9.1\n  ],\n  [\n    "3/11/2004 22:00:00",\n    1.5,\n    61,\n    4.7,\n    85,\n    8.2\n  ],\n  [\n    "3/11/2004 23:00:00",\n    1,\n    26,\n    2.6,\n    53,\n    8.2\n  ],\n  [\n    "3/12/2004 0:00:00",\n    1.7,\n    55,\n    5.9,\n    97,\n    8.3\n  ],\n  [\n    "3/12/2004 1:00:00",\n    1.9,\n    53,\n    6.4,\n    110,\n    7.7\n  ],\n  [\n    "3/12/2004 2:00:00",\n    1.4,\n    40,\n    4.1,\n    91,\n    7.1\n  ],\n  [\n    "3/12/2004 3:00:00",\n    0.8,\n    21,\n    1.9,\n    70,\n    7\n  ],\n  [\n    "3/12/2004 4:00:00",\n    5,\n    10,\n    1.1,\n    32,\n    6.1\n  ],\n  [\n    "3/12/2004 5:00:00",\n    0.6,\n    7,\n    1,\n    44,\n    6.3\n  ],\n  [\n    "3/12/2004 6:00:00",\n    0.8,\n    17,\n    1.8,\n    71,\n    6.8\n  ],\n  [\n    "3/12/2004 7:00:00",\n    1.4,\n    33,\n    4.4,\n    104,\n    6.4\n  ],\n  [\n    "3/14/2004 1:00:00",\n    2.8,\n    131,\n    11.9,\n    119,\n    14.6\n  ],\n  [\n    "3/14/2004 2:00:00",\n    2.5,\n    92,\n    8.6,\n    104,\n    12.5\n  ],\n  [\n    "3/14/2004 3:00:00",\n    2.4,\n    132,\n    9.7,\n    97,\n    11.6\n  ],\n  [\n    "3/14/2004 4:00:00",\n    3,\n    56,\n    5.2,\n    82,\n    12.1\n  ],\n  [\n    "3/14/2004 5:00:00",\n    1.2,\n    32,\n    3.7,\n    70,\n    11.5\n  ],\n  [\n    "3/14/2004 6:00:00",\n    1,\n    29,\n    2.5,\n    63,\n    11.6\n  ],\n  [\n    "3/14/2004 7:00:00",\n    0.9,\n    27,\n    2.4,\n    67,\n    10.4\n  ],\n  [\n    "3/14/2004 8:00:00",\n    1.4,\n    36,\n    4.2,\n    84,\n    11.6\n  ],\n  [\n    "3/14/2004 9:00:00",\n    1.6,\n    57,\n    6.4,\n    83,\n    12.4\n  ],\n  [\n    "3/14/2004 10:00:00",\n    2.2,\n    129,\n    8.6,\n    98,\n    14.5\n  ],\n  [\n    "3/14/2004 11:00:00",\n    2.8,\n    148,\n    10.9,\n    114,\n    16.9\n  ],\n  [\n    "3/14/2004 12:00:00",\n    2.8,\n    145,\n    10.7,\n    119,\n    19.3\n  ],\n  [\n    "3/14/2004 13:00:00",\n    2,\n    93,\n    7.5,\n    104,\n    21.2\n  ],\n  [\n    "3/14/2004 14:00:00",\n    1.8,\n    84,\n    7.5,\n    102,\n    21.4\n  ],\n  [\n    "3/14/2004 15:00:00",\n    1.9,\n    99,\n    8.2,\n    107,\n    21.9\n  ],\n  [\n    "3/14/2004 16:00:00",\n    3,\n    150,\n    11.9,\n    129,\n    22.2\n  ],\n  [\n    "3/14/2004 17:00:00",\n    2.9,\n    156,\n    12,\n    128,\n    21.3\n  ],\n  [\n    "3/14/2004 18:00:00",\n    2.5,\n    122,\n    12.2,\n    121,\n    19.7\n  ],\n  [\n    "3/14/2004 19:00:00",\n    4.6,\n    262,\n    20.6,\n    157,\n    18.4\n  ],\n  [\n    "3/14/2004 20:00:00",\n    5.9,\n    341,\n    23.1,\n    173,\n    17.6\n  ],\n  [\n    "3/14/2004 21:00:00",\n    3.4,\n    214,\n    14.7,\n    146,\n    16.7\n  ],\n  [\n    "3/14/2004 22:00:00",\n    2.1,\n    100,\n    9,\n    121,\n    16.3\n  ],\n  [\n    "3/14/2004 23:00:00",\n    2.2,\n    79,\n    8.8,\n    119,\n    14.7\n  ],\n  [\n    "3/15/2004 0:00:00",\n    1.8,\n    66,\n    7.4,\n    99,\n    14.8\n  ],\n  [\n    "3/15/2004 1:00:00",\n    1.8,\n    73,\n    6.9,\n    93,\n    14\n  ],\n  [\n    "3/15/2004 2:00:00",\n    1.8,\n    66,\n    7,\n    88,\n    13.4\n  ],\n  [\n    "3/15/2004 3:00:00",\n    1.1,\n    44,\n    4.4,\n    80,\n    12.6\n  ],\n  [\n    "3/15/2004 4:00:00",\n    9,\n    44,\n    4,\n    71,\n    12.3\n  ],\n  [\n    "3/15/2004 5:00:00",\n    1,\n    39,\n    3.9,\n    74,\n    11.9\n  ],\n  [\n    "3/15/2004 6:00:00",\n    1.4,\n    51,\n    6.4,\n    80,\n    11.4\n  ],\n  [\n    "3/15/2004 7:00:00",\n    2.2,\n    107,\n    9.7,\n    89,\n    11.3\n  ],\n  [\n    "3/15/2004 8:00:00",\n    5.5,\n    336,\n    25.9,\n    114,\n    12.4\n  ],\n  [\n    "3/15/2004 9:00:00",\n    8.1,\n    618,\n    36.7,\n    149,\n    14.8\n  ],\n  [\n    "3/15/2004 10:00:00",\n    5.8,\n    438,\n    26.6,\n    157,\n    17.4\n  ],\n  [\n    "3/15/2004 11:00:00",\n    4.2,\n    334,\n    20.1,\n    155,\n    19.8\n  ],\n  [\n    "3/15/2004 12:00:00",\n    3.1,\n    221,\n    14.1,\n    134,\n    22\n  ],\n  [\n    "3/15/2004 13:00:00",\n    2.9,\n    207,\n    14.9,\n    119,\n    23.3\n  ],\n  [\n    "3/15/2004 14:00:00",\n    2.9,\n    191,\n    15.4,\n    111,\n    23.9\n  ],\n  [\n    "3/15/2004 15:00:00",\n    2.5,\n    185,\n    12.1,\n    104,\n    24.4\n  ],\n  [\n    "3/15/2004 16:00:00",\n    2.3,\n    141,\n    11.5,\n    99,\n    24.4\n  ],\n  [\n    "3/15/2004 17:00:00",\n    2.8,\n    214,\n    14.8,\n    110,\n    23.8\n  ],\n  [\n    "3/15/2004 18:00:00",\n    6.1,\n    471,\n    32.1,\n    162,\n    22.5\n  ],\n  [\n    "3/15/2004 19:00:00",\n    8,\n    685,\n    39.2,\n    187,\n    20.4\n  ],\n  [\n    "3/15/2004 20:00:00",\n    6.5,\n    538,\n    31,\n    165,\n    18.3\n  ],\n  [\n    "3/15/2004 21:00:00",\n    4.2,\n    319,\n    19.9,\n    145,\n    16.7\n  ],\n  [\n    "3/15/2004 22:00:00",\n    3.2,\n    224,\n    15.3,\n    125,\n    15.7\n  ],\n  [\n    "3/15/2004 23:00:00",\n    1.4,\n    67,\n    6.9,\n    101,\n    15.3\n  ],\n  [\n    "3/16/2004 0:00:00",\n    2.1,\n    155,\n    11.1,\n    103,\n    14.1\n  ],\n  [\n    "3/16/2004 1:00:00",\n    1.2,\n    49,\n    5.4,\n    88,\n    14.8\n  ],\n  [\n    "3/16/2004 2:00:00",\n    0.8,\n    29,\n    2.8,\n    61,\n    14.8\n  ],\n  [\n    "3/16/2004 3:00:00",\n    0.7,\n    25,\n    2.3,\n    60,\n    13.6\n  ],\n  [\n    "3/16/2004 4:00:00",\n    10,\n    25,\n    2.6,\n    59,\n    12.3\n  ],\n  [\n    "3/16/2004 5:00:00",\n    0.6,\n    17,\n    2,\n    52,\n    12.8\n  ],\n  [\n    "3/16/2004 6:00:00",\n    0.9,\n    27,\n    3.5,\n    64,\n    11.2\n  ],\n  [\n    "3/16/2004 7:00:00",\n    1.3,\n    50,\n    5.1,\n    70,\n    11\n  ],\n  [\n    "3/16/2004 8:00:00",\n    3.4,\n    218,\n    16.2,\n    97,\n    11.7\n  ],\n  [\n    "3/16/2004 9:00:00",\n    3.7,\n    285,\n    19.7,\n    95,\n    13.6\n  ],\n  [\n    "3/16/2004 10:00:00",\n    5.3,\n    437,\n    25.1,\n    150,\n    17.8\n  ],\n  [\n    "3/16/2004 11:00:00",\n    4.1,\n    327,\n    20,\n    162,\n    21.4\n  ],\n  [\n    "3/16/2004 12:00:00",\n    3.3,\n    283,\n    18.3,\n    154,\n    24.4\n  ]\n]',
  description:
    'Adding a static reference line (by value) to indicate targets or threshold.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/adding-a-reference-line-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/adding-a-reference-line-schema.json'\n).then(jsonify);\n\nexport default class AddingReferenceLine extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        caption: {\n          text: 'Temperature readings in Italy'\n        },\n        yAxis: [\n          {\n            plot: 'Temperature',\n            title: 'Temperature',\n            format: {\n              suffix: '°C'\n            },\n            style: {\n              title: {\n                'font-size': '14px'\n              }\n            },\n            referenceLine: [\n              {\n                label: 'Controlled Temperature',\n                value: '10'\n              }\n            ]\n          }\n        ],\n        // Initially data is set as null\n        data: null\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Adding a reference line</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex11'] = {
  title: 'Annotating single data point',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%b-%Y"\n  },\n  {\n    "name": "Interest Rate",\n    "type": "number"\n  }\n]',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/annotating-single-data-point-data.json\n[\n  [\n    "Jan-1980",\n    14\n  ],\n  [\n    "Feb-1980",\n    20\n  ],\n  [\n    "Mar-1980",\n    20\n  ],\n  [\n    "Apr-1980",\n    11.5\n  ],\n  [\n    "May-1980",\n    11.5\n  ],\n  [\n    "Jun-1980",\n    9.75\n  ],\n  [\n    "Jul-1980",\n    9.5\n  ],\n  [\n    "Aug-1980",\n    10\n  ],\n  [\n    "Sep-1980",\n    12\n  ],\n  [\n    "Oct-1980",\n    13.75\n  ],\n  [\n    "Nov-1980",\n    18\n  ],\n  [\n    "Dec-1980",\n    18\n  ],\n  [\n    "Jan-1981",\n    16\n  ],\n  [\n    "Feb-1981",\n    16\n  ],\n  [\n    "Mar-1981",\n    16\n  ],\n  [\n    "Apr-1981",\n    16\n  ],\n  [\n    "May-1981",\n    20\n  ],\n  [\n    "Jun-1981",\n    20\n  ],\n  [\n    "Jul-1981",\n    20\n  ],\n  [\n    "Aug-1981",\n    20\n  ],\n  [\n    "Sep-1981",\n    20\n  ],\n  [\n    "Oct-1981",\n    20\n  ],\n  [\n    "Nov-1981",\n    13\n  ],\n  [\n    "Dec-1981",\n    12\n  ],\n  [\n    "Jan-1982",\n    15\n  ],\n  [\n    "Feb-1982",\n    15\n  ],\n  [\n    "Mar-1982",\n    15\n  ],\n  [\n    "Apr-1982",\n    13\n  ],\n  [\n    "May-1982",\n    13\n  ],\n  [\n    "Jun-1982",\n    13\n  ],\n  [\n    "Jul-1982",\n    12\n  ],\n  [\n    "Aug-1982",\n    9.5\n  ],\n  [\n    "Sep-1982",\n    10\n  ],\n  [\n    "Oct-1982",\n    9.5\n  ],\n  [\n    "Nov-1982",\n    9\n  ],\n  [\n    "Dec-1982",\n    8.5\n  ],\n  [\n    "Jan-1983",\n    8.5\n  ],\n  [\n    "Feb-1983",\n    8.5\n  ],\n  [\n    "Mar-1983",\n    8.5\n  ],\n  [\n    "Apr-1983",\n    8.5\n  ],\n  [\n    "May-1983",\n    9.63\n  ],\n  [\n    "Jun-1983",\n    9.63\n  ],\n  [\n    "Jul-1983",\n    9.63\n  ],\n  [\n    "Aug-1983",\n    9.5\n  ],\n  [\n    "Sep-1983",\n    9.5\n  ],\n  [\n    "Oct-1983",\n    9.5\n  ],\n  [\n    "Nov-1983",\n    9.5\n  ],\n  [\n    "Dec-1983",\n    9.5\n  ],\n  [\n    "Jan-1984",\n    9.5\n  ],\n  [\n    "Feb-1984",\n    9.5\n  ],\n  [\n    "Mar-1984",\n    10.5\n  ],\n  [\n    "Apr-1984",\n    10.5\n  ],\n  [\n    "May-1984",\n    10.5\n  ],\n  [\n    "Jun-1984",\n    11\n  ],\n  [\n    "Jul-1984",\n    11.75\n  ],\n  [\n    "Aug-1984",\n    11.75\n  ],\n  [\n    "Sep-1984",\n    10\n  ],\n  [\n    "Oct-1984",\n    10\n  ],\n  [\n    "Nov-1984",\n    9\n  ],\n  [\n    "Dec-1984",\n    8.25\n  ],\n  [\n    "Jan-1985",\n    8.25\n  ],\n  [\n    "Feb-1985",\n    9\n  ],\n  [\n    "Mar-1985",\n    8.5\n  ],\n  [\n    "Apr-1985",\n    8.25\n  ],\n  [\n    "May-1985",\n    7.75\n  ],\n  [\n    "Jun-1985",\n    7.75\n  ],\n  [\n    "Jul-1985",\n    8\n  ],\n  [\n    "Aug-1985",\n    8\n  ],\n  [\n    "May-2001",\n    4\n  ],\n  [\n    "Jun-2001",\n    3.75\n  ],\n  [\n    "Jul-2001",\n    3.75\n  ],\n  [\n    "Aug-2001",\n    3.5\n  ],\n  [\n    "Sep-2001",\n    3\n  ],\n  [\n    "Oct-2001",\n    2.5\n  ],\n  [\n    "Nov-2001",\n    2\n  ],\n  [\n    "Dec-2001",\n    1.75\n  ],\n  [\n    "Jan-2002",\n    1.75\n  ],\n  [\n    "Feb-2002",\n    1.75\n  ],\n  [\n    "Mar-2002",\n    1.75\n  ],\n  [\n    "Apr-2002",\n    1.75\n  ],\n  [\n    "May-2002",\n    1.75\n  ],\n  [\n    "Jun-2002",\n    1.75\n  ],\n  [\n    "Jul-2002",\n    1.75\n  ],\n  [\n    "Aug-2002",\n    1.75\n  ],\n  [\n    "Sep-2002",\n    1.75\n  ],\n  [\n    "Oct-2002",\n    1.75\n  ],\n  [\n    "Nov-2002",\n    1.25\n  ],\n  [\n    "Dec-2002",\n    1.25\n  ],\n  [\n    "Jan-2003",\n    1.25\n  ],\n  [\n    "Feb-2003",\n    1.25\n  ],\n  [\n    "Mar-2003",\n    1.25\n  ],\n  [\n    "Apr-2003",\n    1.25\n  ],\n  [\n    "May-2003",\n    1.25\n  ],\n  [\n    "Jun-2003",\n    1\n  ],\n  [\n    "Jul-2003",\n    1\n  ],\n  [\n    "Aug-2003",\n    1\n  ],\n  [\n    "Sep-2003",\n    1\n  ],\n  [\n    "Oct-2003",\n    1\n  ],\n  [\n    "Nov-2003",\n    1\n  ],\n  [\n    "Dec-2003",\n    1\n  ],\n  [\n    "Jan-2004",\n    1\n  ],\n  [\n    "Feb-2004",\n    1\n  ],\n  [\n    "Mar-2004",\n    1\n  ],\n  [\n    "Apr-2004",\n    1\n  ],\n  [\n    "May-2004",\n    1\n  ],\n  [\n    "Jun-2004",\n    1.25\n  ],\n  [\n    "Jul-2004",\n    1.25\n  ],\n  [\n    "Aug-2004",\n    1.5\n  ],\n  [\n    "Sep-2004",\n    1.75\n  ],\n  [\n    "Oct-2004",\n    1.75\n  ],\n  [\n    "Nov-2004",\n    2\n  ],\n  [\n    "Dec-2004",\n    2.25\n  ],\n  [\n    "Jan-2005",\n    2.25\n  ],\n  [\n    "Feb-2005",\n    2.5\n  ],\n  [\n    "Mar-2005",\n    2.75\n  ],\n  [\n    "Apr-2005",\n    2.75\n  ],\n  [\n    "May-2005",\n    3\n  ],\n  [\n    "Jun-2005",\n    3.25\n  ],\n  [\n    "Jul-2005",\n    3.25\n  ],\n  [\n    "Aug-2005",\n    3.5\n  ],\n  [\n    "Sep-2005",\n    3.75\n  ],\n  [\n    "Oct-2005",\n    3.75\n  ],\n  [\n    "Nov-2005",\n    4\n  ],\n  [\n    "Dec-2005",\n    4.25\n  ],\n  [\n    "Jan-2006",\n    4.5\n  ],\n  [\n    "Feb-2006",\n    4.5\n  ],\n  [\n    "Mar-2006",\n    4.75\n  ],\n  [\n    "Apr-2006",\n    4.75\n  ],\n  [\n    "May-2006",\n    5\n  ],\n  [\n    "Jun-2006",\n    5.25\n  ],\n  [\n    "Jul-2006",\n    5.25\n  ],\n  [\n    "Aug-2006",\n    5.25\n  ],\n  [\n    "Sep-2006",\n    5.25\n  ],\n  [\n    "Oct-2006",\n    5.25\n  ],\n  [\n    "Nov-2006",\n    5.25\n  ],\n  [\n    "Dec-2006",\n    5.25\n  ],\n  [\n    "Jan-2007",\n    5.25\n  ],\n  [\n    "Feb-2007",\n    5.25\n  ],\n  [\n    "Mar-2007",\n    5.25\n  ],\n  [\n    "Apr-2007",\n    5.25\n  ],\n  [\n    "May-2007",\n    5.25\n  ],\n  [\n    "Jun-2007",\n    5.25\n  ],\n  [\n    "Jul-2007",\n    5.25\n  ],\n  [\n    "Aug-2007",\n    5.25\n  ],\n  [\n    "Sep-2007",\n    4.75\n  ],\n  [\n    "Oct-2007",\n    4.5\n  ],\n  [\n    "Nov-2007",\n    4.5\n  ],\n  [\n    "Dec-2007",\n    4.25\n  ],\n  [\n    "Jan-2008",\n    3\n  ],\n  [\n    "Feb-2008",\n    3\n  ],\n  [\n    "Mar-2008",\n    2.25\n  ],\n  [\n    "Apr-2008",\n    2\n  ],\n  [\n    "May-2008",\n    2\n  ],\n  [\n    "Jun-2008",\n    2\n  ],\n  [\n    "Jul-2008",\n    2\n  ],\n  [\n    "Aug-2008",\n    2\n  ],\n  [\n    "Sep-2008",\n    2\n  ],\n  [\n    "Oct-2008",\n    1\n  ],\n  [\n    "Nov-2008",\n    1\n  ],\n  [\n    "Dec-2008",\n    0.125\n  ],\n  [\n    "Jan-2009",\n    0.125\n  ],\n  [\n    "Feb-2009",\n    0.125\n  ],\n  [\n    "Mar-2009",\n    0.125\n  ],\n  [\n    "Apr-2009",\n    0.125\n  ],\n  [\n    "May-2009",\n    0.125\n  ],\n  [\n    "Jun-2009",\n    0.125\n  ],\n  [\n    "Jul-2009",\n    0.125\n  ],\n  [\n    "Aug-2009",\n    0.125\n  ],\n  [\n    "Sep-2009",\n    0.125\n  ],\n  [\n    "Oct-2009",\n    0.125\n  ],\n  [\n    "Nov-2009",\n    0.125\n  ],\n  [\n    "Dec-2009",\n    0.125\n  ],\n  [\n    "Jan-2010",\n    0.125\n  ],\n  [\n    "Feb-2010",\n    0.125\n  ],\n  [\n    "Mar-2010",\n    0.125\n  ],\n  [\n    "Apr-2010",\n    0.125\n  ],\n  [\n    "May-2010",\n    0.125\n  ],\n  [\n    "Jun-2010",\n    0.125\n  ],\n  [\n    "Jul-2010",\n    0.125\n  ],\n  [\n    "Aug-2010",\n    0.125\n  ],\n  [\n    "Sep-2010",\n    0.125\n  ],\n  [\n    "Oct-2010",\n    0.125\n  ],\n  [\n    "Nov-2010",\n    0.125\n  ],\n  [\n    "Dec-2010",\n    0.125\n  ],\n  [\n    "Jan-2011",\n    0.125\n  ],\n  [\n    "Feb-2011",\n    0.125\n  ],\n  [\n    "Mar-2011",\n    0.125\n  ],\n  [\n    "Apr-2011",\n    0.125\n  ],\n  [\n    "May-2011",\n    0.125\n  ],\n  [\n    "Jun-2011",\n    0.125\n  ],\n  [\n    "Jul-2011",\n    0.125\n  ],\n  [\n    "Aug-2011",\n    0.125\n  ],\n  [\n    "Sep-2011",\n    0.125\n  ],\n  [\n    "Oct-2011",\n    0.125\n  ]\n]',
  description:
    'Annotating specific data point using data markers on line series',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/annotating-single-data-point-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/annotating-single-data-point-schema.json'\n).then(jsonify);\n\nexport default class AnnotatingSingleData extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        data: null,\n        caption: {\n          text: "Interest Rate Analysis"\n        },\n        subCaption: {\n          text: "Federal Reserve (USA)"\n        },\n        yAxis: [\n          {\n            plot: "Interest Rate",\n            format: {\n              suffix: "%"\n            },\n            title: "Interest Rate"\n          }\n        ],\n        dataMarker: [\n          {\n            seriesName: "Interest Rate",\n            time: "Mar-1980",\n            identifier: "H",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "As a part of credit control program, under the leadership of Paul Volcker, the Fed tightened the money supply, allowing the federal fund rates to approach 20 percent."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "Aug-1982",\n            identifier: "L",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "The FED eases off the monetary brakes, allowing interest rates to fall and the economy to begin a strong recovery."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "Oct-1987",\n            identifier: "L",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "The FED is forced to ease rate after the stock market crash."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "May-1989",\n            identifier: "H",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "Liquidity problem forced the Fed to increase rate to nearly 10%."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "Sept-1992",\n            identifier: "L",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "To fight the jobless economy growth the Fed had to reduce the interest rate to 3%."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "Jun-2003",\n            identifier: "L",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "Struggling to revive the economy, the FED cuts it’s benchmark rate to 1%."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "Sep-2007",\n            identifier: "L",\n            timeFormat: "%b-%Y",\n            tooltext: "Fed started reducing the Federal Fund Rate."\n          },\n          {\n            seriesName: "Interest Rate",\n            time: "Dec-2008",\n            identifier: "L",\n            timeFormat: "%b-%Y",\n            tooltext:\n              "Fed reduced the interest rates to sub 0.25% to manage the menace of longest economic downturn since World War 2"\n          }\n        ]\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Annotating Single Data</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex12'] = {
  title: 'Area chart with time axis',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/area-chart-with-time-axis-data.json\n[\n  [\n    "2016-01-01",\n    5\n  ],\n  [\n    "2016-01-02",\n    90\n  ],\n  [\n    "2016-01-03",\n    19\n  ],\n  [\n    "2016-01-04",\n    74\n  ],\n  [\n    "2016-01-05",\n    81\n  ],\n  [\n    "2016-01-06",\n    48\n  ],\n  [\n    "2016-01-07",\n    60\n  ],\n  [\n    "2016-01-08",\n    18\n  ],\n  [\n    "2016-01-09",\n    36\n  ],\n  [\n    "2016-01-10",\n    53\n  ],\n  [\n    "2016-01-11",\n    15\n  ],\n  [\n    "2016-01-12",\n    34\n  ],\n  [\n    "2016-01-13",\n    71\n  ],\n  [\n    "2016-01-14",\n    47\n  ],\n  [\n    "2016-01-15",\n    35\n  ],\n  [\n    "2016-01-16",\n    99\n  ],\n  [\n    "2016-01-17",\n    79\n  ],\n  [\n    "2016-01-18",\n    25\n  ],\n  [\n    "2016-01-19",\n    14\n  ],\n  [\n    "2016-01-20",\n    16\n  ],\n  [\n    "2016-01-21",\n    79\n  ],\n  [\n    "2016-01-22",\n    15\n  ],\n  [\n    "2016-01-23",\n    94\n  ],\n  [\n    "2016-01-24",\n    77\n  ],\n  [\n    "2016-01-25",\n    38\n  ],\n  [\n    "2016-01-26",\n    17\n  ],\n  [\n    "2016-01-27",\n    24\n  ],\n  [\n    "2016-01-28",\n    53\n  ],\n  [\n    "2016-01-29",\n    52\n  ],\n  [\n    "2016-01-30",\n    76\n  ],\n  [\n    "2016-01-31",\n    86\n  ],\n  [\n    "2016-02-01",\n    71\n  ],\n  [\n    "2016-02-02",\n    84\n  ],\n  [\n    "2016-02-03",\n    3\n  ],\n  [\n    "2016-02-04",\n    86\n  ],\n  [\n    "2016-02-05",\n    86\n  ],\n  [\n    "2016-02-06",\n    93\n  ],\n  [\n    "2016-02-07",\n    66\n  ],\n  [\n    "2016-02-08",\n    18\n  ],\n  [\n    "2016-02-09",\n    95\n  ],\n  [\n    "2016-02-10",\n    21\n  ],\n  [\n    "2016-02-11",\n    19\n  ],\n  [\n    "2016-02-12",\n    28\n  ],\n  [\n    "2016-02-13",\n    36\n  ],\n  [\n    "2016-02-14",\n    95\n  ],\n  [\n    "2016-02-15",\n    83\n  ],\n  [\n    "2016-02-16",\n    43\n  ],\n  [\n    "2016-02-17",\n    19\n  ],\n  [\n    "2016-02-18",\n    46\n  ],\n  [\n    "2016-02-19",\n    75\n  ],\n  [\n    "2016-02-20",\n    61\n  ],\n  [\n    "2016-02-21",\n    54\n  ],\n  [\n    "2016-02-22",\n    96\n  ],\n  [\n    "2016-02-23",\n    56\n  ],\n  [\n    "2016-02-24",\n    78\n  ],\n  [\n    "2016-02-25",\n    32\n  ],\n  [\n    "2016-02-26",\n    39\n  ],\n  [\n    "2016-02-27",\n    7\n  ],\n  [\n    "2016-02-28",\n    92\n  ],\n  [\n    "2016-02-29",\n    18\n  ],\n  [\n    "2016-03-01",\n    33\n  ],\n  [\n    "2016-03-02",\n    32\n  ],\n  [\n    "2016-03-03",\n    49\n  ],\n  [\n    "2016-03-04",\n    59\n  ],\n  [\n    "2016-03-05",\n    42\n  ],\n  [\n    "2016-03-06",\n    94\n  ],\n  [\n    "2016-03-07",\n    15\n  ],\n  [\n    "2016-03-08",\n    31\n  ],\n  [\n    "2016-03-09",\n    32\n  ],\n  [\n    "2016-03-10",\n    93\n  ],\n  [\n    "2016-03-11",\n    53\n  ],\n  [\n    "2016-03-12",\n    64\n  ],\n  [\n    "2016-03-13",\n    42\n  ],\n  [\n    "2016-03-14",\n    18\n  ],\n  [\n    "2016-03-15",\n    4\n  ],\n  [\n    "2016-03-16",\n    83\n  ],\n  [\n    "2016-03-17",\n    35\n  ],\n  [\n    "2016-03-18",\n    96\n  ],\n  [\n    "2016-03-19",\n    54\n  ],\n  [\n    "2016-03-20",\n    40\n  ],\n  [\n    "2016-03-21",\n    38\n  ],\n  [\n    "2016-03-22",\n    21\n  ],\n  [\n    "2016-03-23",\n    34\n  ],\n  [\n    "2016-03-24",\n    94\n  ],\n  [\n    "2016-03-25",\n    89\n  ],\n  [\n    "2016-03-26",\n    86\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%Y-%m-%d"\n  },\n  {\n    "name": "Daily Visitors",\n    "type": "number"\n  }\n]',
  description: 'Time-series chart with series plotted as area.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/area-chart-with-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/area-chart-with-time-axis-schema.json'\n).then(jsonify);\n\nexport default class AreaTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        chart: {\n          showLegend: 0\n        },\n        caption: {\n          text: 'Daily Visitors Count of a Website'\n        },\n        yAxis: [\n          {\n            plot: {\n              value: 'Daily Visitors',\n              type: 'area'\n            },\n            title: 'Daily Visitors (in thousand)'\n          }\n        ],\n        // Initially data is set as null\n        data: null\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Area Chart with Time Axis</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex13'] = {
  title: 'Column and line combination on time axis',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-line-combination-data.json\n[\n  [\n    "01-Jan-2015",\n    "55",\n    "100"\n  ],\n  [\n    "02-Jan-2015",\n    "56",\n    "106"\n  ],\n  [\n    "03-Jan-2015",\n    "59",\n    "108"\n  ],\n  [\n    "04-Jan-2015",\n    "50",\n    "102"\n  ],\n  [\n    "05-Jan-2015",\n    "56",\n    "108"\n  ],\n  [\n    "06-Jan-2015",\n    "48",\n    "100"\n  ],\n  [\n    "07-Jan-2015",\n    "45",\n    "97"\n  ],\n  [\n    "08-Jan-2015",\n    "56",\n    "105"\n  ],\n  [\n    "09-Jan-2015",\n    "44",\n    "95"\n  ],\n  [\n    "10-Jan-2015",\n    "48",\n    "96"\n  ],\n  [\n    "11-Jan-2015",\n    "52",\n    "104"\n  ],\n  [\n    "12-Jan-2015",\n    "59",\n    "112"\n  ],\n  [\n    "13-Jan-2015",\n    "62",\n    "118"\n  ],\n  [\n    "14-Jan-2015",\n    "56",\n    "114"\n  ],\n  [\n    "15-Jan-2015",\n    "59",\n    "115"\n  ],\n  [\n    "16-Jan-2015",\n    "64",\n    "125"\n  ],\n  [\n    "17-Jan-2015",\n    "61",\n    "122"\n  ],\n  [\n    "18-Jan-2015",\n    "65",\n    "127"\n  ],\n  [\n    "19-Jan-2015",\n    "59",\n    "126"\n  ],\n  [\n    "20-Jan-2015",\n    "75",\n    "138"\n  ],\n  [\n    "21-Jan-2015",\n    "58",\n    "124"\n  ],\n  [\n    "22-Jan-2015",\n    "72",\n    "134"\n  ],\n  [\n    "23-Jan-2015",\n    "64",\n    "132"\n  ],\n  [\n    "24-Jan-2015",\n    "75",\n    "143"\n  ],\n  [\n    "25-Jan-2015",\n    "66",\n    "133"\n  ],\n  [\n    "26-Jan-2015",\n    "70",\n    "134"\n  ],\n  [\n    "27-Jan-2015",\n    "64",\n    "133"\n  ],\n  [\n    "28-Jan-2015",\n    "63",\n    "128"\n  ],\n  [\n    "29-Jan-2015",\n    "69",\n    "135"\n  ],\n  [\n    "30-Jan-2015",\n    "62",\n    "129"\n  ],\n  [\n    "31-Jan-2015",\n    "71",\n    "136"\n  ],\n  [\n    "01-Feb-2015",\n    "76",\n    "148"\n  ],\n  [\n    "02-Feb-2015",\n    "85",\n    "156"\n  ],\n  [\n    "03-Feb-2015",\n    "86",\n    "156"\n  ],\n  [\n    "04-Feb-2015",\n    "86",\n    "169"\n  ],\n  [\n    "05-Feb-2015",\n    "93",\n    "180"\n  ],\n  [\n    "06-Feb-2015",\n    "95",\n    "185"\n  ],\n  [\n    "07-Feb-2015",\n    "100",\n    "189"\n  ],\n  [\n    "08-Feb-2015",\n    "103",\n    "194"\n  ],\n  [\n    "09-Feb-2015",\n    "96",\n    "193"\n  ],\n  [\n    "10-Feb-2015",\n    "82",\n    "174"\n  ],\n  [\n    "11-Feb-2015",\n    "97",\n    "183"\n  ],\n  [\n    "12-Feb-2015",\n    "79",\n    "175"\n  ],\n  [\n    "13-Feb-2015",\n    "74",\n    "161"\n  ],\n  [\n    "14-Feb-2015",\n    "67",\n    "149"\n  ],\n  [\n    "15-Feb-2015",\n    "76",\n    "150"\n  ],\n  [\n    "16-Feb-2015",\n    "68",\n    "144"\n  ],\n  [\n    "17-Feb-2015",\n    "76",\n    "147"\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%e-%b-%Y"\n  },\n  {\n    "name": "Downloads",\n    "type": "number"\n  },\n  {\n    "name": "Web Visits",\n    "type": "number"\n  }\n]',
  description:
    'Two series of data plotted as a combination of column & line on the same y-axis',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-line-combination-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/column-line-combination-schema.json'\n).then(jsonify);\n\nexport default class ColumnLineTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        chart: {\n          showLegend: 0\n        },\n        caption: {\n          text: 'Daily Visitors Count of a Website'\n        },\n        yAxis: [\n          {\n            plot: {\n              value: 'Daily Visitors',\n              type: 'area'\n            },\n            title: 'Daily Visitors (in thousand)'\n          }\n        ],\n        // Initially data is set as null\n        data: null\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Column and line combination on time axis</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex14'] = {
  title: 'Column chart with time axis',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-chart-with-time-axis-data.json\n[\n  [\n    "2016-01-01",\n    5\n  ],\n  [\n    "2016-01-02",\n    90\n  ],\n  [\n    "2016-01-03",\n    19\n  ],\n  [\n    "2016-01-04",\n    74\n  ],\n  [\n    "2016-01-05",\n    81\n  ],\n  [\n    "2016-01-06",\n    48\n  ],\n  [\n    "2016-01-07",\n    60\n  ],\n  [\n    "2016-01-08",\n    18\n  ],\n  [\n    "2016-01-09",\n    36\n  ],\n  [\n    "2016-01-10",\n    53\n  ],\n  [\n    "2016-01-11",\n    15\n  ],\n  [\n    "2016-01-12",\n    34\n  ],\n  [\n    "2016-01-13",\n    71\n  ],\n  [\n    "2016-01-14",\n    47\n  ],\n  [\n    "2016-01-15",\n    35\n  ],\n  [\n    "2016-01-16",\n    99\n  ],\n  [\n    "2016-01-17",\n    79\n  ],\n  [\n    "2016-01-18",\n    25\n  ],\n  [\n    "2016-01-19",\n    14\n  ],\n  [\n    "2016-01-20",\n    16\n  ],\n  [\n    "2016-01-21",\n    79\n  ],\n  [\n    "2016-01-22",\n    15\n  ],\n  [\n    "2016-01-23",\n    94\n  ],\n  [\n    "2016-01-24",\n    77\n  ],\n  [\n    "2016-01-25",\n    38\n  ],\n  [\n    "2016-01-26",\n    17\n  ],\n  [\n    "2016-01-27",\n    24\n  ],\n  [\n    "2016-01-28",\n    53\n  ],\n  [\n    "2016-01-29",\n    52\n  ],\n  [\n    "2016-01-30",\n    76\n  ],\n  [\n    "2016-01-31",\n    86\n  ],\n  [\n    "2016-02-01",\n    71\n  ],\n  [\n    "2016-02-02",\n    84\n  ],\n  [\n    "2016-02-03",\n    3\n  ],\n  [\n    "2016-02-04",\n    86\n  ],\n  [\n    "2016-02-05",\n    86\n  ],\n  [\n    "2016-02-06",\n    93\n  ],\n  [\n    "2016-02-07",\n    66\n  ],\n  [\n    "2016-02-08",\n    18\n  ],\n  [\n    "2016-02-09",\n    95\n  ],\n  [\n    "2016-02-10",\n    21\n  ],\n  [\n    "2016-02-11",\n    19\n  ],\n  [\n    "2016-02-12",\n    28\n  ],\n  [\n    "2016-02-13",\n    36\n  ],\n  [\n    "2016-02-14",\n    95\n  ],\n  [\n    "2016-02-15",\n    83\n  ],\n  [\n    "2016-02-16",\n    43\n  ],\n  [\n    "2016-02-17",\n    19\n  ],\n  [\n    "2016-02-18",\n    46\n  ],\n  [\n    "2016-02-19",\n    75\n  ],\n  [\n    "2016-02-20",\n    61\n  ],\n  [\n    "2016-02-21",\n    54\n  ],\n  [\n    "2016-02-22",\n    96\n  ],\n  [\n    "2016-02-23",\n    56\n  ],\n  [\n    "2016-02-24",\n    78\n  ],\n  [\n    "2016-02-25",\n    32\n  ],\n  [\n    "2016-02-26",\n    39\n  ],\n  [\n    "2016-02-27",\n    7\n  ],\n  [\n    "2016-02-28",\n    92\n  ],\n  [\n    "2016-02-29",\n    18\n  ],\n  [\n    "2016-03-01",\n    33\n  ],\n  [\n    "2016-03-02",\n    32\n  ],\n  [\n    "2016-03-03",\n    49\n  ],\n  [\n    "2016-03-04",\n    59\n  ],\n  [\n    "2016-03-05",\n    42\n  ],\n  [\n    "2016-03-06",\n    94\n  ],\n  [\n    "2016-03-07",\n    15\n  ],\n  [\n    "2016-03-08",\n    31\n  ],\n  [\n    "2016-03-09",\n    32\n  ],\n  [\n    "2016-03-10",\n    93\n  ],\n  [\n    "2016-03-11",\n    53\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%Y-%m-%d"\n  },\n  {\n    "name": "Daily Visitors",\n    "type": "number"\n  }\n]',
  description: 'Time-series chart with series plotted as column.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-chart-with-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/column-chart-with-time-axis-schema.json'\n).then(jsonify);\n\nexport default class ColumnTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        data: null,\n        chart: {\n          showLegend: 0\n        },\n        caption: {\n          text: "Daily Visitors Count of a Website"\n        },\n        yAxis: [\n          {\n            plot: {\n              value: "Daily Visitors",\n              type: "column"\n            },\n            title: "Daily Visitors (in thousand)"\n          }\n        ]\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Column Chart with Time Axis</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex15'] = {
  title: 'Date range event overlay',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/date-range-event-overlay-data.json\n[\n  [\n    "Jan-1980",\n    14\n  ],\n  [\n    "Feb-1980",\n    20\n  ],\n  [\n    "Mar-1980",\n    20\n  ],\n  [\n    "Apr-1980",\n    11.5\n  ],\n  [\n    "May-1980",\n    11.5\n  ],\n  [\n    "Jun-1980",\n    9.75\n  ],\n  [\n    "Jul-1980",\n    9.5\n  ],\n  [\n    "Aug-1980",\n    10\n  ],\n  [\n    "Sep-1980",\n    12\n  ],\n  [\n    "Oct-1980",\n    13.75\n  ],\n  [\n    "Nov-1980",\n    18\n  ],\n  [\n    "Dec-1980",\n    18\n  ],\n  [\n    "Jan-1981",\n    16\n  ],\n  [\n    "Feb-1981",\n    16\n  ],\n  [\n    "Mar-1981",\n    16\n  ],\n  [\n    "Apr-1981",\n    16\n  ],\n  [\n    "May-1981",\n    20\n  ],\n  [\n    "Jun-1981",\n    20\n  ],\n  [\n    "Jul-1981",\n    20\n  ],\n  [\n    "Aug-1981",\n    20\n  ],\n  [\n    "Sep-1981",\n    20\n  ],\n  [\n    "Oct-1981",\n    20\n  ],\n  [\n    "Nov-1981",\n    13\n  ],\n  [\n    "Dec-1981",\n    12\n  ],\n  [\n    "Jan-1982",\n    15\n  ],\n  [\n    "Feb-1982",\n    15\n  ],\n  [\n    "Mar-1982",\n    15\n  ],\n  [\n    "Apr-1982",\n    13\n  ],\n  [\n    "May-1982",\n    13\n  ],\n  [\n    "Jun-1982",\n    13\n  ],\n  [\n    "Jul-1982",\n    12\n  ],\n  [\n    "Aug-1982",\n    9.5\n  ],\n  [\n    "Sep-1982",\n    10\n  ],\n  [\n    "Oct-1982",\n    9.5\n  ],\n  [\n    "Nov-1982",\n    9\n  ],\n  [\n    "Dec-1982",\n    8.5\n  ],\n  [\n    "Jan-1983",\n    8.5\n  ],\n  [\n    "Feb-1983",\n    8.5\n  ],\n  [\n    "Mar-1983",\n    8.5\n  ],\n  [\n    "Apr-1983",\n    8.5\n  ],\n  [\n    "May-1983",\n    9.63\n  ],\n  [\n    "Jun-1983",\n    9.63\n  ],\n  [\n    "Jul-1983",\n    9.63\n  ],\n  [\n    "Aug-1983",\n    9.5\n  ],\n  [\n    "Sep-1983",\n    9.5\n  ],\n  [\n    "Oct-1983",\n    9.5\n  ],\n  [\n    "Nov-1983",\n    9.5\n  ],\n  [\n    "Dec-1983",\n    9.5\n  ],\n  [\n    "Jan-1984",\n    9.5\n  ],\n  [\n    "Feb-1984",\n    9.5\n  ],\n  [\n    "Mar-1984",\n    10.5\n  ],\n  [\n    "Apr-1984",\n    10.5\n  ],\n  [\n    "May-1984",\n    10.5\n  ],\n  [\n    "Jun-1984",\n    11\n  ],\n  [\n    "Jul-1984",\n    11.75\n  ],\n  [\n    "Aug-1984",\n    11.75\n  ],\n  [\n    "Sep-1984",\n    10\n  ],\n  [\n    "Oct-1984",\n    10\n  ],\n  [\n    "Nov-1984",\n    9\n  ],\n  [\n    "Dec-1984",\n    8.25\n  ],\n  [\n    "Jan-1985",\n    8.25\n  ],\n  [\n    "Feb-1985",\n    9\n  ],\n  [\n    "Mar-1985",\n    8.5\n  ],\n  [\n    "Apr-1985",\n    8.25\n  ],\n  [\n    "May-1985",\n    7.75\n  ],\n  [\n    "Jun-1985",\n    7.75\n  ],\n  [\n    "Jul-1985",\n    8\n  ],\n  [\n    "Aug-1985",\n    8\n  ],\n  [\n    "Sep-1985",\n    8\n  ],\n  [\n    "Oct-1985",\n    8\n  ],\n  [\n    "Nov-1985",\n    8\n  ],\n  [\n    "Dec-1985",\n    7.75\n  ],\n  [\n    "Jan-1986",\n    7.75\n  ],\n  [\n    "Feb-1986",\n    7.75\n  ],\n  [\n    "Mar-1986",\n    7.25\n  ],\n  [\n    "Apr-1986",\n    6.75\n  ],\n  [\n    "May-1986",\n    6.88\n  ],\n  [\n    "Jun-1986",\n    6.88\n  ],\n  [\n    "Jul-1986",\n    6.38\n  ],\n  [\n    "Aug-1986",\n    5.88\n  ],\n  [\n    "Sep-1986",\n    5.88\n  ],\n  [\n    "Oct-1986",\n    5.88\n  ],\n  [\n    "Nov-1986",\n    5.88\n  ],\n  [\n    "Dec-1986",\n    6\n  ],\n  [\n    "Jan-1987",\n    6\n  ],\n  [\n    "Feb-1987",\n    6\n  ],\n  [\n    "Mar-1987",\n    6\n  ],\n  [\n    "Apr-1987",\n    6.75\n  ],\n  [\n    "May-1987",\n    6.75\n  ],\n  [\n    "Jun-1987",\n    6.75\n  ],\n  [\n    "Jul-1987",\n    6.75\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%b-%Y"\n  },\n  {\n    "name": "Interest Rate",\n    "type": "number"\n  }\n]',
  description:
    'Plotting an event marker as a band, to indicate an event that spans a data range.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/date-range-event-overlay-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/date-range-event-overlay-schema.json'\n).then(jsonify);\n\nexport default class DateEventOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        data: null,\n        caption: {\n          text: "Interest Rate Analysis"\n        },\n        subCaption: {\n          text: "Federal Reserve (USA)"\n        },\n        yAxis: [\n          {\n            plot: "Interest Rate",\n            format: {\n              suffix: "%"\n            },\n            title: "Interest Rate"\n          }\n        ],\n        xAxis: {\n          plot: "Time",\n          timemarker: [\n            {\n              start: "Jul-1981",\n              end: "Nov-1982",\n              label:\n                "Economic downturn was triggered by {br} tight monetary policy in an effort to {br} fight mounting inflation.",\n              timeFormat: "%b-%Y"\n            },\n            {\n              start: "Jul-1990",\n              end: "Mar-1991",\n              label:\n                "This eight month recession period {br} was characterized by a sluggish employment recovery, {br} most commonly referred to as a jobless recovery.",\n              timeFormat: "%b-%Y"\n            },\n            {\n              start: "Jun-2004",\n              end: "Jul-2006",\n              label:\n                "The Fed after raising interest rates {br} at 17 consecutive meetings, ends its campaign {br} to slow the economy and forestall inflation.",\n              timeFormat: "%b-%Y"\n            },\n            {\n              start: "Dec-2007",\n              end: "Jun-2009",\n              label:\n                "Recession caused by the worst {br} collapse of financial system in recent {br} times.",\n              timeFormat: "%b-%Y"\n            }\n          ]\n        }\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Date range event overlay</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex16'] = {
  title: 'Interactive candlestick chart',
  description:
    'Time-series chart plotted as candlestick, with 4 different values for each plot (open, high, low, close)',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nexport default class ChartRunTime extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'column2d',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {/* see data tab */};\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  changeType(type) {\n    this.setState({ chartType: type }, () => {\n      this.apiCaller(\`window.chartObj.chartType('\${type}')\`);\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Change chart type at runtime</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n            onInitialized={caller => {\n              this.apiCaller = caller;\n              if (this.state.chartType === '')\n                this.setState({ chartType: this.state.type });\n            }}\n          />\n        </View>\n        <Text style={styles.info}>Press button to change chart type</Text>\n        <View style={styles.buttonContainer}>\n          <Button\n            disabled={\n              this.state.chartType === '' || this.state.chartType == 'column2d'\n            }\n            style={{ margin: 8 }}\n            title="Column2D"\n            onPress={() => this.changeType('column2d')}\n          />\n          <Button\n            disabled={\n              this.state.chartType === '' || this.state.chartType == 'pie2d'\n            }\n            title="Pie2D"\n            onPress={() => this.changeType('pie2d')}\n          />\n          <Button\n            disabled={\n              this.state.chartType === '' || this.state.chartType == 'bar2d'\n            }\n            title="Bar2D"\n            onPress={() => this.changeType('bar2d')}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  },\n  buttonContainer: {\n    padding: 10,\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  info: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 5\n  }\n});`
};

fcDemos['ex17'] = {
  title: 'Plotting multiple series on time axis',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/plotting-multiple-series-on-time-axis-data.json\n[\n  [\n    "01-Feb-11",\n    "Grocery",\n    8866\n  ],\n  [\n    "01-Feb-11",\n    "Footwear",\n    984\n  ],\n  [\n    "02-Feb-11",\n    "Grocery",\n    2174\n  ],\n  [\n    "02-Feb-11",\n    "Footwear",\n    1109\n  ],\n  [\n    "03-Feb-11",\n    "Grocery",\n    2084\n  ],\n  [\n    "03-Feb-11",\n    "Footwear",\n    6526\n  ],\n  [\n    "04-Feb-11",\n    "Grocery",\n    1503\n  ],\n  [\n    "04-Feb-11",\n    "Footwear",\n    1007\n  ],\n  [\n    "05-Feb-11",\n    "Grocery",\n    4928\n  ],\n  [\n    "05-Feb-11",\n    "Footwear",\n    4112\n  ],\n  [\n    "06-Feb-11",\n    "Grocery",\n    4667\n  ],\n  [\n    "06-Feb-11",\n    "Footwear",\n    7206\n  ],\n  [\n    "07-Feb-11",\n    "Grocery",\n    1064\n  ],\n  [\n    "07-Feb-11",\n    "Footwear",\n    7890\n  ],\n  [\n    "08-Feb-11",\n    "Grocery",\n    851\n  ],\n  [\n    "08-Feb-11",\n    "Footwear",\n    6002\n  ],\n  [\n    "09-Feb-11",\n    "Grocery",\n    7326\n  ],\n  [\n    "09-Feb-11",\n    "Footwear",\n    5168\n  ],\n  [\n    "10-Feb-11",\n    "Grocery",\n    8399\n  ],\n  [\n    "10-Feb-11",\n    "Footwear",\n    7992\n  ],\n  [\n    "11-Feb-11",\n    "Grocery",\n    4084\n  ],\n  [\n    "11-Feb-11",\n    "Footwear",\n    3001\n  ],\n  [\n    "12-Feb-11",\n    "Grocery",\n    4012\n  ],\n  [\n    "12-Feb-11",\n    "Footwear",\n    7891\n  ],\n  [\n    "13-Feb-11",\n    "Grocery",\n    1673\n  ],\n  [\n    "13-Feb-11",\n    "Footwear",\n    511\n  ],\n  [\n    "14-Feb-11",\n    "Grocery",\n    6018\n  ],\n  [\n    "14-Feb-11",\n    "Footwear",\n    1861\n  ],\n  [\n    "15-Feb-11",\n    "Grocery",\n    9011\n  ],\n  [\n    "15-Feb-11",\n    "Footwear",\n    1424\n  ],\n  [\n    "16-Feb-11",\n    "Grocery",\n    5817\n  ],\n  [\n    "16-Feb-11",\n    "Footwear",\n    6807\n  ],\n  [\n    "17-Feb-11",\n    "Grocery",\n    5813\n  ],\n  [\n    "17-Feb-11",\n    "Footwear",\n    4126\n  ],\n  [\n    "18-Feb-11",\n    "Grocery",\n    566\n  ],\n  [\n    "18-Feb-11",\n    "Footwear",\n    3482\n  ],\n  [\n    "19-Feb-11",\n    "Grocery",\n    9065\n  ],\n  [\n    "19-Feb-11",\n    "Footwear",\n    5649\n  ],\n  [\n    "20-Feb-11",\n    "Grocery",\n    6734\n  ],\n  [\n    "20-Feb-11",\n    "Footwear",\n    309\n  ],\n  [\n    "21-Feb-11",\n    "Grocery",\n    6937\n  ],\n  [\n    "21-Feb-11",\n    "Footwear",\n    6568\n  ],\n  [\n    "22-Feb-11",\n    "Grocery",\n    3038\n  ],\n  [\n    "22-Feb-11",\n    "Footwear",\n    2458\n  ],\n  [\n    "23-Feb-11",\n    "Grocery",\n    4445\n  ],\n  [\n    "23-Feb-11",\n    "Footwear",\n    356\n  ],\n  [\n    "24-Feb-11",\n    "Grocery",\n    8782\n  ],\n  [\n    "24-Feb-11",\n    "Footwear",\n    5883\n  ],\n  [\n    "25-Feb-11",\n    "Grocery",\n    9489\n  ],\n  [\n    "25-Feb-11",\n    "Footwear",\n    6556\n  ],\n  [\n    "26-Feb-11",\n    "Grocery",\n    9624\n  ],\n  [\n    "26-Feb-11",\n    "Footwear",\n    1601\n  ],\n  [\n    "27-Feb-11",\n    "Grocery",\n    9033\n  ],\n  [\n    "27-Feb-11",\n    "Footwear",\n    1359\n  ],\n  [\n    "28-Feb-11",\n    "Grocery",\n    6932\n  ],\n  [\n    "28-Feb-11",\n    "Footwear",\n    4361\n  ],\n  [\n    "01-Mar-11",\n    "Grocery",\n    625\n  ],\n  [\n    "01-Mar-11",\n    "Footwear",\n    3807\n  ],\n  [\n    "02-Mar-11",\n    "Grocery",\n    904\n  ],\n  [\n    "02-Mar-11",\n    "Footwear",\n    2279\n  ],\n  [\n    "03-Mar-11",\n    "Grocery",\n    7572\n  ],\n  [\n    "03-Mar-11",\n    "Footwear",\n    7226\n  ],\n  [\n    "04-Mar-11",\n    "Grocery",\n    2124\n  ],\n  [\n    "04-Mar-11",\n    "Footwear",\n    6155\n  ],\n  [\n    "05-Mar-11",\n    "Grocery",\n    8157\n  ],\n  [\n    "05-Mar-11",\n    "Footwear",\n    1908\n  ],\n  [\n    "06-Mar-11",\n    "Grocery",\n    8666\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%d-%b-%y"\n  },\n  {\n    "name": "Type",\n    "type": "string"\n  },\n  {\n    "name": "Sales Value",\n    "type": "number"\n  }\n]',
  description:
    'A multi-series chart with 2 variables plotted as line on the same y-axis.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/plotting-multiple-series-on-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/plotting-multiple-series-on-time-axis-schema.json'\n).then(jsonify);\n\nexport default class MultiSeriesTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        caption: {\n          text: 'Sales Analysis'\n        },\n        subcaption: {\n          text: 'Grocery & Footwear'\n        },\n        series: 'Type',\n        yAxis: [\n          {\n            plot: 'Sales Value',\n            title: 'Sale Value',\n            format: {\n              prefix: '$'\n            }\n          }\n        ],\n        // Initially data is set as null\n        data: null\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Plotting multiple series on Time Axis</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex18'] = {
  title: 'Plotting two variables',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-chart-with-time-axis-data.json\n[\n  [\n    "2016-01-01",\n    5\n  ],\n  [\n    "2016-01-02",\n    90\n  ],\n  [\n    "2016-01-03",\n    19\n  ],\n  [\n    "2016-01-04",\n    74\n  ],\n  [\n    "2016-01-05",\n    81\n  ],\n  [\n    "2016-01-06",\n    48\n  ],\n  [\n    "2016-01-07",\n    60\n  ],\n  [\n    "2016-01-08",\n    18\n  ],\n  [\n    "2016-01-09",\n    36\n  ],\n  [\n    "2016-01-10",\n    53\n  ],\n  [\n    "2016-01-11",\n    15\n  ],\n  [\n    "2016-01-12",\n    34\n  ],\n  [\n    "2016-01-13",\n    71\n  ],\n  [\n    "2016-01-14",\n    47\n  ],\n  [\n    "2016-01-15",\n    35\n  ],\n  [\n    "2016-01-16",\n    99\n  ],\n  [\n    "2016-01-17",\n    79\n  ],\n  [\n    "2016-01-18",\n    25\n  ],\n  [\n    "2016-01-19",\n    14\n  ],\n  [\n    "2016-01-20",\n    16\n  ],\n  [\n    "2016-01-21",\n    79\n  ],\n  [\n    "2016-01-22",\n    15\n  ],\n  [\n    "2016-01-23",\n    94\n  ],\n  [\n    "2016-01-24",\n    77\n  ],\n  [\n    "2016-01-25",\n    38\n  ],\n  [\n    "2016-01-26",\n    17\n  ],\n  [\n    "2016-01-27",\n    24\n  ],\n  [\n    "2016-01-28",\n    53\n  ],\n  [\n    "2016-01-29",\n    52\n  ],\n  [\n    "2016-01-30",\n    76\n  ],\n  [\n    "2016-01-31",\n    86\n  ],\n  [\n    "2016-02-01",\n    71\n  ],\n  [\n    "2016-02-02",\n    84\n  ],\n  [\n    "2016-02-03",\n    3\n  ],\n  [\n    "2016-02-04",\n    86\n  ],\n  [\n    "2016-02-05",\n    86\n  ],\n  [\n    "2016-02-06",\n    93\n  ],\n  [\n    "2016-02-07",\n    66\n  ],\n  [\n    "2016-02-08",\n    18\n  ],\n  [\n    "2016-02-09",\n    95\n  ],\n  [\n    "2016-02-10",\n    21\n  ],\n  [\n    "2016-02-11",\n    19\n  ],\n  [\n    "2016-02-12",\n    28\n  ],\n  [\n    "2016-02-13",\n    36\n  ],\n  [\n    "2016-02-14",\n    95\n  ],\n  [\n    "2016-02-15",\n    83\n  ],\n  [\n    "2016-02-16",\n    43\n  ],\n  [\n    "2016-02-17",\n    19\n  ],\n  [\n    "2016-02-18",\n    46\n  ],\n  [\n    "2016-02-19",\n    75\n  ],\n  [\n    "2016-02-20",\n    61\n  ],\n  [\n    "2016-02-21",\n    54\n  ],\n  [\n    "2016-02-22",\n    96\n  ],\n  [\n    "2016-02-23",\n    56\n  ],\n  [\n    "2016-02-24",\n    78\n  ],\n  [\n    "2016-02-25",\n    32\n  ],\n  [\n    "2016-02-26",\n    39\n  ],\n  [\n    "2016-02-27",\n    7\n  ],\n  [\n    "2016-02-28",\n    92\n  ],\n  [\n    "2016-02-29",\n    18\n  ],\n  [\n    "2016-03-01",\n    33\n  ],\n  [\n    "2016-03-02",\n    32\n  ],\n  [\n    "2016-03-03",\n    49\n  ],\n  [\n    "2016-03-04",\n    59\n  ],\n  [\n    "2016-03-05",\n    42\n  ],\n  [\n    "2016-03-06",\n    94\n  ],\n  [\n    "2016-03-07",\n    15\n  ],\n  [\n    "2016-03-08",\n    31\n  ],\n  [\n    "2016-03-09",\n    32\n  ],\n  [\n    "2016-03-10",\n    93\n  ],\n  [\n    "2016-03-11",\n    53\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Date",\n    "type": "date",\n    "format": "%-m/%d/%Y"\n  },\n  {\n    "name": "O2 concentration",\n    "type": "number"\n  },\n  {\n    "name": "Surface Temperature",\n    "type": "number"\n  }\n]',
  description:
    'A multi-series chart with 2 variables plotted as line on the same y-axis.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-chart-with-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/column-chart-with-time-axis-schema.json'\n).then(jsonify);\n\nexport default class ColumnTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        data: null,\n        chart: {\n          showLegend: 0\n        },\n        caption: {\n          text: "Daily Visitors Count of a Website"\n        },\n        yAxis: [\n          {\n            plot: {\n              value: "Daily Visitors",\n              type: "column"\n            },\n            title: "Daily Visitors (in thousand)"\n          }\n        ]\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Column Chart with Time Axis</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

fcDemos['ex19'] = {
  title: 'Single event overlay',
  data:
    '// A shortened version of the data is given here.\n// Please check the link below to see the complete data:\n// https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/single-event-overlay-data.json\n[\n  [\n    "Jan-1980",\n    14\n  ],\n  [\n    "Feb-1980",\n    20\n  ],\n  [\n    "Mar-1980",\n    20\n  ],\n  [\n    "Apr-1980",\n    11.5\n  ],\n  [\n    "May-1980",\n    11.5\n  ],\n  [\n    "Jun-1980",\n    9.75\n  ],\n  [\n    "Jul-1980",\n    9.5\n  ],\n  [\n    "Aug-1980",\n    10\n  ],\n  [\n    "Sep-1980",\n    12\n  ],\n  [\n    "Oct-1980",\n    13.75\n  ],\n  [\n    "Nov-1980",\n    18\n  ],\n  [\n    "Dec-1980",\n    18\n  ],\n  [\n    "Jan-1981",\n    16\n  ],\n  [\n    "Feb-1981",\n    16\n  ],\n  [\n    "Mar-1981",\n    16\n  ],\n  [\n    "Apr-1981",\n    16\n  ],\n  [\n    "May-1981",\n    20\n  ],\n  [\n    "Jun-1981",\n    20\n  ],\n  [\n    "Jul-1981",\n    20\n  ],\n  [\n    "Aug-1981",\n    20\n  ],\n  [\n    "Sep-1981",\n    20\n  ],\n  [\n    "Oct-1981",\n    20\n  ],\n  [\n    "Nov-1981",\n    13\n  ],\n  [\n    "Dec-1981",\n    12\n  ],\n  [\n    "Jan-1982",\n    15\n  ],\n  [\n    "Feb-1982",\n    15\n  ],\n  [\n    "Mar-1982",\n    15\n  ],\n  [\n    "Apr-1982",\n    13\n  ],\n  [\n    "May-1982",\n    13\n  ],\n  [\n    "Jun-1982",\n    13\n  ],\n  [\n    "Jul-1982",\n    12\n  ],\n  [\n    "Aug-1982",\n    9.5\n  ],\n  [\n    "Sep-1982",\n    10\n  ],\n  [\n    "Oct-1982",\n    9.5\n  ],\n  [\n    "Nov-1982",\n    9\n  ],\n  [\n    "Dec-1982",\n    8.5\n  ],\n  [\n    "Jan-1983",\n    8.5\n  ],\n  [\n    "Feb-1983",\n    8.5\n  ],\n  [\n    "Mar-1983",\n    8.5\n  ],\n  [\n    "Apr-1983",\n    8.5\n  ],\n  [\n    "May-1983",\n    9.63\n  ],\n  [\n    "Jun-1983",\n    9.63\n  ],\n  [\n    "Jul-1983",\n    9.63\n  ],\n  [\n    "Aug-1983",\n    9.5\n  ],\n  [\n    "Sep-1983",\n    9.5\n  ],\n  [\n    "Oct-1983",\n    9.5\n  ],\n  [\n    "Nov-1983",\n    9.5\n  ],\n  [\n    "Dec-1983",\n    9.5\n  ],\n  [\n    "Jan-1984",\n    9.5\n  ],\n  [\n    "Feb-1984",\n    9.5\n  ],\n  [\n    "Mar-1984",\n    10.5\n  ],\n  [\n    "Apr-1984",\n    10.5\n  ],\n  [\n    "May-1984",\n    10.5\n  ],\n  [\n    "Dec-2001",\n    1.75\n  ],\n  [\n    "Jan-2002",\n    1.75\n  ],\n  [\n    "Feb-2002",\n    1.75\n  ],\n  [\n    "Mar-2002",\n    1.75\n  ],\n  [\n    "Apr-2002",\n    1.75\n  ],\n  [\n    "May-2002",\n    1.75\n  ],\n  [\n    "Jun-2002",\n    1.75\n  ],\n  [\n    "Jul-2002",\n    1.75\n  ],\n  [\n    "Aug-2002",\n    1.75\n  ],\n  [\n    "Sep-2002",\n    1.75\n  ],\n  [\n    "Oct-2002",\n    1.75\n  ],\n  [\n    "Nov-2002",\n    1.25\n  ],\n  [\n    "Dec-2002",\n    1.25\n  ],\n  [\n    "Jan-2003",\n    1.25\n  ],\n  [\n    "Feb-2003",\n    1.25\n  ],\n  [\n    "Mar-2003",\n    1.25\n  ],\n  [\n    "Apr-2003",\n    1.25\n  ],\n  [\n    "May-2003",\n    1.25\n  ],\n  [\n    "Jun-2003",\n    1\n  ],\n  [\n    "Jul-2003",\n    1\n  ],\n  [\n    "Aug-2003",\n    1\n  ],\n  [\n    "Sep-2003",\n    1\n  ],\n  [\n    "Oct-2003",\n    1\n  ],\n  [\n    "Nov-2003",\n    1\n  ],\n  [\n    "Dec-2003",\n    1\n  ],\n  [\n    "Jan-2004",\n    1\n  ],\n  [\n    "Feb-2004",\n    1\n  ],\n  [\n    "Mar-2004",\n    1\n  ],\n  [\n    "Apr-2004",\n    1\n  ],\n  [\n    "May-2004",\n    1\n  ],\n  [\n    "Jun-2004",\n    1.25\n  ],\n  [\n    "Jul-2004",\n    1.25\n  ],\n  [\n    "Aug-2004",\n    1.5\n  ],\n  [\n    "Sep-2004",\n    1.75\n  ],\n  [\n    "Oct-2004",\n    1.75\n  ],\n  [\n    "Nov-2004",\n    2\n  ],\n  [\n    "Dec-2004",\n    2.25\n  ],\n  [\n    "Jan-2005",\n    2.25\n  ],\n  [\n    "Feb-2005",\n    2.5\n  ],\n  [\n    "Mar-2005",\n    2.75\n  ],\n  [\n    "Apr-2005",\n    2.75\n  ],\n  [\n    "May-2005",\n    3\n  ],\n  [\n    "Jun-2005",\n    3.25\n  ],\n  [\n    "Jul-2005",\n    3.25\n  ],\n  [\n    "Aug-2005",\n    3.5\n  ],\n  [\n    "Sep-2005",\n    3.75\n  ],\n  [\n    "Oct-2005",\n    3.75\n  ],\n  [\n    "Nov-2005",\n    4\n  ],\n  [\n    "Dec-2005",\n    4.25\n  ],\n  [\n    "Jan-2006",\n    4.5\n  ],\n  [\n    "Feb-2006",\n    4.5\n  ],\n  [\n    "Mar-2006",\n    4.75\n  ],\n  [\n    "Apr-2006",\n    4.75\n  ],\n  [\n    "May-2006",\n    5\n  ],\n  [\n    "Jun-2006",\n    5.25\n  ],\n  [\n    "Jul-2006",\n    5.25\n  ],\n  [\n    "Aug-2006",\n    5.25\n  ],\n  [\n    "Sep-2006",\n    5.25\n  ],\n  [\n    "Oct-2006",\n    5.25\n  ],\n  [\n    "Nov-2006",\n    5.25\n  ],\n  [\n    "Dec-2006",\n    5.25\n  ],\n  [\n    "Jan-2007",\n    5.25\n  ],\n  [\n    "Feb-2007",\n    5.25\n  ],\n  [\n    "Mar-2007",\n    5.25\n  ],\n  [\n    "Apr-2007",\n    5.25\n  ],\n  [\n    "May-2007",\n    5.25\n  ],\n  [\n    "Jun-2007",\n    5.25\n  ],\n  [\n    "Jul-2007",\n    5.25\n  ],\n  [\n    "Aug-2007",\n    5.25\n  ],\n  [\n    "Sep-2007",\n    4.75\n  ],\n  [\n    "Oct-2007",\n    4.5\n  ],\n  [\n    "Nov-2007",\n    4.5\n  ],\n  [\n    "Dec-2007",\n    4.25\n  ],\n  [\n    "Jan-2008",\n    3\n  ],\n  [\n    "Feb-2008",\n    3\n  ],\n  [\n    "Mar-2008",\n    2.25\n  ],\n  [\n    "Apr-2008",\n    2\n  ],\n  [\n    "May-2008",\n    2\n  ],\n  [\n    "Jun-2008",\n    2\n  ],\n  [\n    "Jul-2008",\n    2\n  ],\n  [\n    "Aug-2008",\n    2\n  ],\n  [\n    "Sep-2008",\n    2\n  ],\n  [\n    "Oct-2008",\n    1\n  ],\n  [\n    "Nov-2008",\n    1\n  ],\n  [\n    "Dec-2008",\n    0.125\n  ],\n  [\n    "Jan-2009",\n    0.125\n  ],\n  [\n    "Feb-2009",\n    0.125\n  ],\n  [\n    "Mar-2009",\n    0.125\n  ],\n  [\n    "Apr-2009",\n    0.125\n  ],\n  [\n    "May-2009",\n    0.125\n  ],\n  [\n    "Jun-2009",\n    0.125\n  ],\n  [\n    "Jul-2009",\n    0.125\n  ],\n  [\n    "Aug-2009",\n    0.125\n  ],\n  [\n    "Sep-2009",\n    0.125\n  ],\n  [\n    "Oct-2009",\n    0.125\n  ],\n  [\n    "Nov-2009",\n    0.125\n  ],\n  [\n    "Dec-2009",\n    0.125\n  ],\n  [\n    "Jan-2010",\n    0.125\n  ],\n  [\n    "Feb-2010",\n    0.125\n  ],\n  [\n    "Mar-2010",\n    0.125\n  ],\n  [\n    "Apr-2010",\n    0.125\n  ],\n  [\n    "May-2010",\n    0.125\n  ],\n  [\n    "Jun-2010",\n    0.125\n  ],\n  [\n    "Jul-2010",\n    0.125\n  ],\n  [\n    "Aug-2010",\n    0.125\n  ],\n  [\n    "Sep-2010",\n    0.125\n  ],\n  [\n    "Oct-2010",\n    0.125\n  ],\n  [\n    "Nov-2010",\n    0.125\n  ],\n  [\n    "Dec-2010",\n    0.125\n  ],\n  [\n    "Jan-2011",\n    0.125\n  ],\n  [\n    "Feb-2011",\n    0.125\n  ],\n  [\n    "Mar-2011",\n    0.125\n  ],\n  [\n    "Apr-2011",\n    0.125\n  ],\n  [\n    "May-2011",\n    0.125\n  ],\n  [\n    "Jun-2011",\n    0.125\n  ],\n  [\n    "Jul-2011",\n    0.125\n  ],\n  [\n    "Aug-2011",\n    0.125\n  ],\n  [\n    "Sep-2011",\n    0.125\n  ],\n  [\n    "Oct-2011",\n    0.125\n  ]\n]',
  schema:
    '[\n  {\n    "name": "Time",\n    "type": "date",\n    "format": "%b-%Y"\n  },\n  {\n    "name": "Interest Rate",\n    "type": "number"\n  }\n]',
  description:
    'Plotting an event marker to indicate an event for a specific date.',
  code: `import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport FusionCharts from 'react-native-fusioncharts';\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/single-event-overlay-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/single-event-overlay-schema.json'\n).then(jsonify);\n\nexport default class SingleEventOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.apiCaller = null;\n    this.state = {\n      type: 'timeseries',\n      width: '100%',\n      height: '100%',\n      dataFormat: 'json',\n      chartType: '',\n      dataSource: {\n        data: null,\n        caption: {\n          text: "Interest Rate Analysis"\n        },\n        subCaption: {\n          text: "Federal Reserve (USA)"\n        },\n        yAxis: [\n          {\n            plot: "Interest Rate",\n            format: {\n              suffix: "%"\n            },\n            title: "Interest Rate"\n          }\n        ],\n        xAxis: {\n          plot: "Time",\n          timemarker: [\n            {\n              start: "Jul-1981",\n              end: "Nov-1982",\n              label:\n                "Economic downturn was triggered by {br} tight monetary policy in an effort to {br} fight mounting inflation.",\n              timeFormat: "%b-%Y"\n            },\n            {\n              start: "Jul-1990",\n              end: "Mar-1991",\n              label:\n                "This eight month recession period {br} was characterized by a sluggish employment recovery, {br} most commonly referred to as a jobless recovery.",\n              timeFormat: "%b-%Y"\n            },\n            {\n              start: "Jun-2004",\n              end: "Jul-2006",\n              label:\n                "The Fed after raising interest rates {br} at 17 consecutive meetings, ends its campaign {br} to slow the economy and forestall inflation.",\n              timeFormat: "%b-%Y"\n            },\n            {\n              start: "Dec-2007",\n              end: "Jun-2009",\n              label:\n                "Recession caused by the worst {br} collapse of financial system in recent {br} times.",\n              timeFormat: "%b-%Y"\n            }\n          ]\n        }\n      },\n      schemaJson: null,\n      dataJson: null\n    };\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      android: { uri: 'file:///android_asset/fusioncharts.html' },\n      ios: require('./assets/fusioncharts.html')\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      this.setState({ dataJson: data, schemaJson: schema });\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Single Event Overlay</Text>\n        <View style={styles.chartContainer}>\n          <FusionCharts\n            dataJson={this.state.dataJson}\n            schemaJson={this.state.schemaJson}\n            type={this.state.type}\n            width={this.state.width}\n            height={this.state.height}\n            dataFormat={this.state.dataFormat}\n            dataSource={this.state.dataSource}\n            libraryPath={this.libraryPath} // set the libraryPath property\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  chartContainer: {\n    height: 400,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});`
};

export default fcDemos;
